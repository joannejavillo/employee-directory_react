{"version":3,"sources":["utils/Api.js","components/Container/index.js","components/SearchResults/index.js","components/SearchForm/index.js","pages/Search.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Container","props","className","style","children","SearchResults","results","map","result","alt","src","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","onClick","nameFilter","employee","filter","console","log","first","includes","picture","thumbnail","last","location","country","email","phone","Search","state","sortOrder","error","event","setState","target","sort","a","b","handleFormSubmit","preventDefault","API","then","res","data","status","Error","message","catch","err","this","minHeight","Component","Navbar","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f02edb6.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Random User API\n\nexport default {\n  getEmployee: function() {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  },\n\n//getEmployee: function() {\n  //return axios.get(\"https://randomuser.me/api)\" + + \"/images\");\n   //},\n\n\n//   getBaseBreedsList: function() {\n//     return axios.get(\"https://dog.ceo/api/breeds/list\");\n//   }\n};\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchResults(props) {\n  return (\n    <ul className=\"list-group search-results\">\n      {props.results.map(result => (\n        <li key={result} className=\"list-group-item\">\n          <img alt=\"Employee\" src={result} className=\"img-fluid\" />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default SearchResults;","import React from \"react\";\nimport SearchResults from \"../SearchResults\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props array\nfunction SearchForm(props) {\n  const filterFunction = (employee) => {\n      if (props.search === \"\") {\n        return true;\n      }\n      console.log(employee)\n      return employee.name.first.includes(props.search);\n  }\n  return (\n    <form className=\"search\">\n      <div className=\"form-group\">\n        <label htmlFor=\"employee\">Employee Name:</label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"employee\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Employee's name\"\n          id=\"employee\"\n        />\n\n        <div id=\"employee\">\n          <table>\n            <tr>\n              <th>Picture</th>\n              <th onClick= {props.nameFilter}>Name</th>\n              <th>Last Name</th>\n              <th>Country</th>\n              <th>Email</th>\n              <th>Phone</th>\n            </tr>\n            {props.employee.filter(filterFunction).map(employee => (\n              <tr key={employee.email} >\n                <td> <img src={employee.picture.thumbnail} alt=\"profile picture\" /> </td>\n                <td> {employee.name.first} </td>\n                <td> {employee.name.last} </td>\n                <td> {employee.location.country} </td>\n                <td> {employee.email} </td>\n                <td> {employee.phone} </td>\n              </tr>\n\n            ))}\n          </table>\n        </div>\n        \n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\nimport API from \"../utils/Api\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\n//import Alert from \"../components/Alert\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    employee: [],\n    results: [],\n    sortOrder: \"asc\",\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base employee and update this.state.employee\n  componentDidMount() {\n    API.getEmployee()\n      .then(res => {\n        console.log(res)\n        this.setState({ employee: res.data.results })\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n\n  nameFilter = () => {\n    console.log(\"working\")\n    if (this.state.sortOrder === \"asc\") {\n      this.setState({\n        employee: this.state.employee.sort((a, b) => (a.name.first > b.name.first) ? 1 : ((b.name.first > a.name.first) ? -1 : 0)),\n        sortOrder: \"dsc\"\n      })\n    }\n    else {\n      this.setState({\n        employee: this.state.employee.sort((a, b) => (a.name.first > b.name.first) ? -1 : ((b.name.first > a.name.first) ? 1 : 0)),\n        sortOrder: \"asc\"\n      })\n    }\n  }\n \n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getEmployee(this.state.search)\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n  render() {\n    console.log(this.state.employee);\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Employee!</h1>\n\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            search={this.state.search}\n            employee={this.state.employee}\n            nameFilter={this.nameFilter}\n          />\n          <SearchResults results={this.state.results} />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n         <h2> <b> Employee Directory</b></h2> \n      </Link>\n      </nav>\n        \n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//import Container from \"./components/Container\";\n//import Discover from \"./pages/Discover\";\n//import About from \"./pages/About\";\nimport Search from \"./pages/Search\";\nimport Navbar from \"./components/Navbar\";\n//import Footer from \"./components/Footer\";\n//import Wrapper from \"./component/Wrapper\";\n\nfunction App() {\n  //console.log('result')\n  return (\n    <Router>\n      \n        <Navbar/>\n        <Search/>\n\n     \n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}